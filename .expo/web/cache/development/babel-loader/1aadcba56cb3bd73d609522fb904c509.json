{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\LAZYNERD\\\\Desktop\\\\githubwork\\\\Fitcelerator-RN\\\\application\\\\components\\\\PostRating.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StarRating from 'react-native-star-rating';\n\nvar PostRating = function (_Component) {\n  _inherits(PostRating, _Component);\n\n  var _super = _createSuper(PostRating);\n\n  function PostRating(props) {\n    var _this;\n\n    _classCallCheck(this, PostRating);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n    _this.state = {\n      rating: 0\n    };\n    var postId = props.postId;\n    _this.commentsRef = firebase.database().ref(\"postComments/\" + postId);\n    return _this;\n  }\n\n  _createClass(PostRating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n\n      if (this._isMounted) {\n        this.commentsRef.on(\"child_added\", function (snapshot) {\n          _this2.commentsRef.on(\"value\", function (snap) {\n            var comments = [];\n            snap.forEach(function (row) {\n              comments.push(parseInt(row.val().rating));\n            });\n\n            _this2.setState({\n              rating: comments.reduce(function (previous, current) {\n                return previous + current;\n              }, 0) / comments.length\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rating = this.state.rating;\n      return React.createElement(View, {\n        style: {\n          alignItems: 'flex-start',\n          flexDirection: 'row',\n          justifyContent: 'flex-start'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 1\n        }\n      }, rating ? React.createElement(StarRating, {\n        ref: \"rating\",\n        disabled: true,\n        maxStars: 5,\n        emptyStar: require(\"../../assets/images/empty-star.png\"),\n        fullStar: require(\"../../assets/images/star.png\"),\n        halfStar: require(\"../../assets/images/half-star.png\"),\n        rating: rating,\n        containerStyle: {\n          width: 100,\n          marginTop: 5\n        },\n        starSize: 20,\n        emptyStarColor: '#f1c40f',\n        fullStarColor: '#f1c40f',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }) : React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 201\n        }\n      }));\n    }\n  }]);\n\n  return PostRating;\n}(Component);\n\nexport { PostRating as default };","map":{"version":3,"sources":["C:/Users/LAZYNERD/Desktop/githubwork/Fitcelerator-RN/application/components/PostRating.js"],"names":["React","Component","firebase","StarRating","PostRating","props","_isMounted","state","rating","postId","commentsRef","database","ref","on","snapshot","snap","comments","forEach","row","push","parseInt","val","setState","reduce","previous","current","length","alignItems","flexDirection","justifyContent","require","width","marginTop"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;;IAEqBC,U;;;;;AACpB,sBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AACnB,8BAAMA,KAAN;AADmB,UASrBC,UATqB,GASR,KATQ;AAEnB,UAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE;AADI,KAAb;AAGA,QAAOC,MAAP,GAAiBJ,KAAjB,CAAOI,MAAP;AACA,UAAKC,WAAL,GAAmBR,QAAQ,CAACS,QAAT,GAAoBC,GAApB,mBAAwCH,MAAxC,CAAnB;AANmB;AAOnB;;;;WAID,6BAAqB;AAAA;;AAEpB,WAAKH,UAAL,GAAkB,IAAlB;;AAEA,UAAI,KAAKA,UAAT,EAAqB;AAEpB,aAAKI,WAAL,CAAiBG,EAAjB,CAAoB,aAApB,EAAmC,UAAAC,QAAQ,EAAI;AAC/C,UAAA,MAAI,CAACJ,WAAL,CAAiBG,EAAjB,CAAoB,OAApB,EAA6B,UAAAE,IAAI,EAAI;AACpC,gBAAIC,QAAQ,GAAG,EAAf;AACAD,YAAAA,IAAI,CAACE,OAAL,CAAa,UAAAC,GAAG,EAAI;AACnBF,cAAAA,QAAQ,CAACG,IAAT,CAAcC,QAAQ,CAACF,GAAG,CAACG,GAAJ,GAAUb,MAAX,CAAtB;AACA,aAFD;;AAIA,YAAA,MAAI,CAACc,QAAL,CAAc;AACbd,cAAAA,MAAM,EAAEQ,QAAQ,CAACO,MAAT,CAAgB,UAACC,QAAD,EAAWC,OAAX;AAAA,uBAAuBD,QAAQ,GAAGC,OAAlC;AAAA,eAAhB,EAA2D,CAA3D,IAAgET,QAAQ,CAACU;AADpE,aAAd;AAOA,WAbD;AAcA,SAfA;AAiBA;AACD;;;WAEA,gCAAuB;AACrB,WAAKpB,UAAL,GAAkB,KAAlB;AACD;;;WAEF,kBAAU;AACT,UAAOE,MAAP,GAAiB,KAAKD,KAAtB,CAAOC,MAAP;AACA,aACF,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACmB,UAAAA,UAAU,EAAE,YAAb;AAA2BC,UAAAA,aAAa,EAAE,KAA1C;AAAiDC,UAAAA,cAAc,EAAE;AAAjE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEOrB,MAAM,GAAG,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAC,QAAhB;AAAyB,QAAA,QAAQ,EAAE,IAAnC;AAAyC,QAAA,QAAQ,EAAE,CAAnD;AAAsD,QAAA,SAAS,EAAEsB,OAAO,sCAAxE;AACJ,QAAA,QAAQ,EAAEA,OAAO,gCADb;AAEJ,QAAA,QAAQ,EAAEA,OAAO,qCAFb;AAEoD,QAAA,MAAM,EAAEtB,MAF5D;AAEoE,QAAA,cAAc,EAAE;AAACuB,UAAAA,KAAK,EAAE,GAAR;AAAaC,UAAAA,SAAS,EAAE;AAAxB,SAFpF;AAEgH,QAAA,QAAQ,EAAE,EAF1H;AAE8H,QAAA,cAAc,EAAE,SAF9I;AAEyJ,QAAA,aAAa,EAAE,SAFxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAE2L,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJxM,CADE;AASA;;;;EArDsC/B,S;;SAAnBG,U","sourcesContent":["import React, {Component} from 'react';\nimport * as firebase from 'firebase';\nimport { View, Text} from \"react-native\";\nimport StarRating from 'react-native-star-rating';\n\nexport default class PostRating extends Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\trating: 0\n\t\t};\n\t\tconst {postId} = props;\n\t\tthis.commentsRef = firebase.database().ref(`postComments/${postId}`);\n\t}\n\n_isMounted = false;\n\n\tcomponentDidMount () {\n\n\t\tthis._isMounted = true;\n\n\t\tif (this._isMounted) {\n\n\t\t\tthis.commentsRef.on(\"child_added\", snapshot => {\n\t\t\tthis.commentsRef.on(\"value\", snap => {\n\t\t\t\tlet comments = [];\n\t\t\t\tsnap.forEach(row => {\n\t\t\t\t\tcomments.push(parseInt(row.val().rating));\n\t\t\t\t});\n\n\t\t\t\tthis.setState({\n\t\t\t\t\trating: comments.reduce((previous, current) => previous + current, 0) / comments.length,\n\t\t\t\t});\n\n\t\t\t\t/*this.refs.rating.setCurrentRating(\n\t\t\t\t\tcomments.reduce((previous, current) => previous + current, 0) / comments.length\n\t\t\t\t);*/\n\t\t\t})\n\t\t});\n\n\t\t}\n\t}\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n\trender () {\n\t\tconst {rating} = this.state;\n\t\treturn (\n<View style={{alignItems: 'flex-start', flexDirection: 'row', justifyContent: 'flex-start'}}>\n      \n      {rating ? <StarRating ref=\"rating\" disabled={true} maxStars={5} emptyStar={require('../../assets/images/empty-star.png')}\n            fullStar={require('../../assets/images/star.png')}\n            halfStar={require('../../assets/images/half-star.png')} rating={rating} containerStyle={{width: 100, marginTop: 5}} starSize={20} emptyStarColor={'#f1c40f'} fullStarColor={'#f1c40f'} /> : <Text></Text>}\n\n</View>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}